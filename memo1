*EntityManager 동시성 문제
EntityManager em;를 통해 주입 받은 엔티티매니저는 가짜 프록시 엔티티 메니저 입니다.

이 엔티티매니저를 호출하면 현재 쓰레드가 사용하는 트랜잭션에 묶여 있는 영속성 컨텍스트를 사용하게 됩니다.

쓰레드1과 쓰레드2는 각각 사용하는 트랜잭션이 다릅니다. 그리고 동시에 같은 메서드를 호출하더라도 쓰레드1은 쓰레드1이 사용하는 영속성 컨텍스트에 접근하고, 쓰레드2는 쓰레드2가 사용하는 영속성 컨텍스트에 접근하게 됩니다.

이것을 바로 가짜 프록시 엔티티 메니저가 중간에서 이런 역할을 해주는 것이지요.

책 581 페이지의 13.4 스레드와 영속성 컨텍스트 그림은 같은 메서드를 호출하는 것으로 생각하시면 됩니다. 여기서 핵심은 바로 트랜잭션입니다. 같은 트랜잭션을 사용하면 같은 영속성 컨텍스트에 접근한다고 이해하시면 됩니다.

*Transaction 주의점
트랜잭션이 걸리지 않은 메서드에서 내부 호출로 트랜잭션 적용 메서드를 호출 할 경우 트랜잭션이 걸리지 않음

클래스 레벨에 트랜잭션을 적용할 경우 동일한 상황에서 내부 호출 메서드가 트랜잭션에 참여함

*엔티티 저장시 주의점
@Override
    public ConfigDto saveConfig(ConfigDto configDto) {
        configDto.setCreatedAt(LocalDateTime.now());
        configDto.setCreatedBy(configDto.getMemberDto().getId());
        MemberDto memberDto = configDto.getMemberDto();
        Member member = em.find(Member.class, memberDto.getId());
        if (member == null) {
            throw new RuntimeException("saveConfig - Member not found");
        }
        Config config = modelMapper.map(configDto, Config.class);
        config.setMember(member);
        em.persist(config);
        return modelMapper.map(config, ConfigDto.class);
    }
Config 내부 Member 도 영속화가 되어 있어야 조회시 '영속화 되어있지 않음' 예외가 터지지 않는다


pay 구현하고 내부 서비스들 다 테스트 하고, 전체 테스트